div{
    margin-left: 20%;
}
.main{
    border: 1px solid rgb(46, 139, 134)
}
button{
    width: 30%;
}

----------------------html-----------------------------


<h2 class="text-center"> Update Restaurant</h2> <hr/>
<div class="col-md-7 main">
    <form>
        <div class="form-group">
            <label for="id">Restaurant Id:</label>
            <input [(ngModel)]="restaurant.id" placeholder="Restaurant id" name="id" class="form-control" #id>
        </div>

        <div class="form-group">
            <label for="name">Restaurant Name:</label>
            <input [(ngModel)]="restaurant.name" placeholder="Restaurant Name" name="name" class="form-control" id="name">
        </div>

        <div class="form-group">
            <label for="location">Location:</label>
            <input [(ngModel)]="restaurant.location" placeholder="Enter Address" name="location" class="form-control" id="location">
        </div>

       
        <div class="form-group">
            <label for="image">Image Url:</label>
            <input [(ngModel)]="restaurant.image" placeholder="Enter imageUrl" name="image" class="form-control" id="image">
        </div>
       
        <div>
            <button class="btn btn-success" (click)="updateRestaurants(restaurant)">  Update  </button>
        </div>
    </form>
    <br/>
</div>


--------------------------------ts----------------------------



import { Component, OnInit } from "@angular/core";
import { Router } from "@angular/router";
import { ActivatedRoute }from "@angular/router";
import { HttpClient, HttpHeaders } from "@angular/common/http";
import { Restaurant } from "../model/restaurant.model";
import { RestaurantService } from "./restaurant.service";

@Component({
  templateUrl: "./update-restaurant.component.html",
  styleUrls: ["./update-restaurant.component.css"]
})
export class UpdateRestaurantComponent implements OnInit{
  id: number;
  restaurant;
  restaurants: Restaurant[];
  restaurantObj:object;
  private headers=new Headers({"Content-Type":"application/json"});
 // restaurant: Restaurant = new Restaurant();

  constructor(
    private http: HttpClient,
    private route: ActivatedRoute,
    private router: Router,
    private restaurantService: RestaurantService
  ) {}
  
  updateRestaurants(restaurant: Restaurant): void {
    console.log("Hiiiiii")
    this.restaurantService.updateRestaurants(restaurant).subscribe(data => {
      console.log(data.name)
      //this.restaurants = this.restaurants.filter(update => update !== restaurant);
      alert("Restaurant Updated Successfully");
    });
  }

  ngOnInit() {
    this.route.params.subscribe(params => {
      this.id = +params["id"];
      
    });
    this.restaurantService.getRestaurants().subscribe(data => {
      //console.log("1")
      this.restaurants = data;
      for (var i = 0; i < this.restaurants.length; i++) {
        console.log("Hi");
        if (this.restaurants[i].id === this.id) {
          this.restaurant = this.restaurants[i];
          console.log(this.restaurants[i].id);
          break;
        }
      }
    });
  }
}

-----------------service-------------------------------------


import { TestBed, inject } from '@angular/core/testing';

import { RestaurantService } from './restaurant.service';

describe('RestaurantService', () => {
  beforeEach(() => {
    TestBed.configureTestingModule({
      providers: [RestaurantService]
    });
  });

  it('should be created', inject([RestaurantService], (service: RestaurantService) => {
    expect(service).toBeTruthy();
  }));
});

